-- Table: public.StatusTypes

-- DROP TABLE IF EXISTS public."StatusTypes";

CREATE TABLE IF NOT EXISTS public."StatusTypes"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Status" character varying(8) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_StatusTypes" PRIMARY KEY ("Id")
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."StatusTypes"
    OWNER to postgres;
	
INSERT INTO public."StatusTypes"("Id", "Status") VALUES	(1, 'Active');
INSERT INTO public."StatusTypes"("Id", "Status") VALUES	(2, 'Inactive');

-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------

-- Table: public.EmploymentTypes

-- DROP TABLE IF EXISTS public."EmploymentTypes";

CREATE TABLE IF NOT EXISTS public."EmploymentTypes"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "EmpJobTypeCode" character varying(20) COLLATE pg_catalog."default" NOT NULL,
    "EmpJobTypeDesc" character varying(150) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_EmploymentTypes" PRIMARY KEY ("Id")
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."EmploymentTypes"
    OWNER to postgres;

INSERT INTO public."EmploymentTypes" VALUES (1, 'FULL-TIME-EMP', 'Full Time Employee');
INSERT INTO public."EmploymentTypes" VALUES (2, 'PART-TIME-EMP', 'Part Time Employee');

-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.CurrencyTypes

-- DROP TABLE IF EXISTS public."CurrencyTypes";

CREATE TABLE IF NOT EXISTS public."CurrencyTypes"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "CurrencyCode" character varying(3) COLLATE pg_catalog."default" NOT NULL,
    "CurrencyName" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Country" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "StatusTypeId" integer NOT NULL,
    CONSTRAINT "PK_CurrencyTypes" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_CurrencyTypes_StatusTypes_StatusTypeId" FOREIGN KEY ("StatusTypeId")
        REFERENCES public."StatusTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."CurrencyTypes"
    OWNER to postgres;
-- Index: IX_CurrencyTypes_StatusTypeId

-- DROP INDEX IF EXISTS public."IX_CurrencyTypes_StatusTypeId";

CREATE INDEX IF NOT EXISTS "IX_CurrencyTypes_StatusTypeId"
    ON public."CurrencyTypes" USING btree
    ("StatusTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
	
INSERT INTO public."CurrencyTypes" VALUES (1, 'SAR', 'Saudi Riyal', 'SAUDI', 1);
INSERT INTO public."CurrencyTypes" VALUES (2, 'INR', 'Indian Rupees', 'INDIAN', 1);

-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.ApprovalLevels

-- DROP TABLE IF EXISTS public."ApprovalLevels";

CREATE TABLE IF NOT EXISTS public."ApprovalLevels"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Level" integer NOT NULL,
    "LevelDesc" character varying(150) COLLATE pg_catalog."default",
    CONSTRAINT "PK_ApprovalLevels" PRIMARY KEY ("Id")
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."ApprovalLevels"
    OWNER to postgres;
	
INSERT INTO public."ApprovalLevels"	VALUES (1, 1, 'Level 1');
INSERT INTO public."ApprovalLevels"	VALUES (2, 2, 'Level 2');
INSERT INTO public."ApprovalLevels"	VALUES (3, 3, 'Level 3');
INSERT INTO public."ApprovalLevels"	VALUES (4, 4, 'Level 4');


-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.ApprovalStatusTypes

-- DROP TABLE IF EXISTS public."ApprovalStatusTypes";

CREATE TABLE IF NOT EXISTS public."ApprovalStatusTypes"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Status" character varying(25) COLLATE pg_catalog."default" NOT NULL,
    "StatusDesc" character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT "PK_ApprovalStatusTypes" PRIMARY KEY ("Id")
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."ApprovalStatusTypes"
    OWNER to postgres;


INSERT INTO public."ApprovalStatusTypes" VALUES (1, 'Initiating', 'Request Initiated');
INSERT INTO public."ApprovalStatusTypes" VALUES (2, 'Pending', 'Awaiting Approval');
INSERT INTO public."ApprovalStatusTypes" VALUES (3, 'In Review', 'Request is in progress');
INSERT INTO public."ApprovalStatusTypes" VALUES (4, 'Approved', 'Request Approved');
INSERT INTO public."ApprovalStatusTypes" VALUES (5, 'Rejected', 'Request is Rejected');
INSERT INTO public."ApprovalStatusTypes" VALUES (6, 'Settled', 'Request is Settled');

-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------

-- Table: public.CostCenters

-- DROP TABLE IF EXISTS public."CostCenters";

CREATE TABLE IF NOT EXISTS public."CostCenters"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "CostCenterCode" character varying(20) COLLATE pg_catalog."default" NOT NULL,
    "CostCenterDesc" character varying(150) COLLATE pg_catalog."default" NOT NULL,
    "StatusTypeId" integer NOT NULL,
    CONSTRAINT "PK_CostCenters" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_CostCenters_StatusTypes_StatusTypeId" FOREIGN KEY ("StatusTypeId")
        REFERENCES public."StatusTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."CostCenters"
    OWNER to postgres;
-- Index: IX_CostCenters_StatusTypeId

-- DROP INDEX IF EXISTS public."IX_CostCenters_StatusTypeId";

CREATE INDEX IF NOT EXISTS "IX_CostCenters_StatusTypeId"
    ON public."CostCenters" USING btree
    ("StatusTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
	
--- <requires input>


INSERT INTO public."CostCenters"(
	"Id", "CostCenterCode", "CostCenterDesc", "StatusTypeId")
	VALUES (1, 'ADM', 'Administration', 1);

-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------

-- Table: public.Departments

-- DROP TABLE IF EXISTS public."Departments";

CREATE TABLE IF NOT EXISTS public."Departments"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "DeptCode" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "DeptName" character varying(150) COLLATE pg_catalog."default" NOT NULL,
    "CostCenterId" integer NOT NULL,
    "StatusTypeId" integer NOT NULL,
    CONSTRAINT "PK_Departments" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Departments_CostCenters_CostCenterId" FOREIGN KEY ("CostCenterId")
        REFERENCES public."CostCenters" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_Departments_StatusTypes_StatusTypeId" FOREIGN KEY ("StatusTypeId")
        REFERENCES public."StatusTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."Departments"
    OWNER to postgres;
-- Index: IX_Departments_CostCenterId

-- DROP INDEX IF EXISTS public."IX_Departments_CostCenterId";

CREATE INDEX IF NOT EXISTS "IX_Departments_CostCenterId"
    ON public."Departments" USING btree
    ("CostCenterId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_Departments_StatusTypeId

-- DROP INDEX IF EXISTS public."IX_Departments_StatusTypeId";

CREATE INDEX IF NOT EXISTS "IX_Departments_StatusTypeId"
    ON public."Departments" USING btree
    ("StatusTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
	
	
INSERT INTO public."Departments"(
	"Id", "DeptCode", "DeptName", "CostCenterId", "StatusTypeId")
	VALUES (1, 'ADM', 'Administration', 1, 1);	
	
--- <requires input>


-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------

-- Table: public.JobRoles

-- DROP TABLE IF EXISTS public."JobRoles";

CREATE TABLE IF NOT EXISTS public."JobRoles"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "RoleCode" character varying(20) COLLATE pg_catalog."default" NOT NULL,
    "RoleName" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "IsStoreRole" boolean NOT NULL,
    "MaxPettyCashAllowed" double precision NOT NULL,
    CONSTRAINT "PK_JobRoles" PRIMARY KEY ("Id")
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."JobRoles"
    OWNER to postgres;
	
	
INSERT INTO public."JobRoles"(
	"Id", "RoleCode", "RoleName", "IsStoreRole", "MaxPettyCashAllowed")
	VALUES (1, 'SETUP-ROLE', 'SETUP-ROLE', false, 100000);
	
--- <requires input>

-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------

-- Table: public.BusinessAreas

-- DROP TABLE IF EXISTS public."BusinessAreas";

CREATE TABLE IF NOT EXISTS public."BusinessAreas"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "BusinessAreaCode" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "BusinessAreaName" character varying(150) COLLATE pg_catalog."default" NOT NULL,
    "CostCenterId" integer NOT NULL,
    "StatusTypeId" integer NOT NULL,
    CONSTRAINT "PK_BusinessAreas" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_BusinessAreas_CostCenters_CostCenterId" FOREIGN KEY ("CostCenterId")
        REFERENCES public."CostCenters" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_BusinessAreas_StatusTypes_StatusTypeId" FOREIGN KEY ("StatusTypeId")
        REFERENCES public."StatusTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."BusinessAreas"
    OWNER to postgres;
-- Index: IX_BusinessAreas_CostCenterId

-- DROP INDEX IF EXISTS public."IX_BusinessAreas_CostCenterId";

CREATE INDEX IF NOT EXISTS "IX_BusinessAreas_CostCenterId"
    ON public."BusinessAreas" USING btree
    ("CostCenterId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_BusinessAreas_StatusTypeId

-- DROP INDEX IF EXISTS public."IX_BusinessAreas_StatusTypeId";

CREATE INDEX IF NOT EXISTS "IX_BusinessAreas_StatusTypeId"
    ON public."BusinessAreas" USING btree
    ("StatusTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
	
	INSERT INTO public."BusinessAreas"(
	"Id", "BusinessAreaCode", "BusinessAreaName", "CostCenterId", "StatusTypeId")
	VALUES (1, 'SETUP-BUSSAREA', 'SETUP-BUSSAREA', 1, 1);
	
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.ApprovalGroups

-- DROP TABLE IF EXISTS public."ApprovalGroups";

CREATE TABLE IF NOT EXISTS public."ApprovalGroups"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "ApprovalGroupCode" character varying(20) COLLATE pg_catalog."default" NOT NULL,
    "ApprovalGroupDesc" character varying(150) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_ApprovalGroups" PRIMARY KEY ("Id")
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."ApprovalGroups"
    OWNER to postgres;
	
	INSERT INTO public."ApprovalGroups"(
	"Id", "ApprovalGroupCode", "ApprovalGroupDesc")
	VALUES (1, 'SETUP-ADMIN', 'SETUP-ADMIN');
	
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------

-- Table: public.Banks

-- DROP TABLE IF EXISTS public."Banks";

CREATE TABLE IF NOT EXISTS public."Banks"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "BankName" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "BankDesc" character varying(150) COLLATE pg_catalog."default" NOT NULL,
    "StatusTypeId" integer NOT NULL,
    CONSTRAINT "PK_Banks" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Banks_StatusTypes_StatusTypeId" FOREIGN KEY ("StatusTypeId")
        REFERENCES public."StatusTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."Banks"
    OWNER to postgres;
-- Index: IX_Banks_StatusTypeId

-- DROP INDEX IF EXISTS public."IX_Banks_StatusTypeId";

CREATE INDEX IF NOT EXISTS "IX_Banks_StatusTypeId"
    ON public."Banks" USING btree
    ("StatusTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
	
INSERT INTO public."Banks"(
	"Id", "BankName", "BankDesc", "StatusTypeId")
	VALUES (1, 'Standard Chartered', 'Standard Chartered', 1);
	
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.Employees

-- DROP TABLE IF EXISTS public."Employees";

CREATE TABLE IF NOT EXISTS public."Employees"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "FirstName" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "MiddleName" character varying(100) COLLATE pg_catalog."default",
    "LastName" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "EmpCode" character varying(30) COLLATE pg_catalog."default" NOT NULL,
    "BankAccount" character varying(30) COLLATE pg_catalog."default" NOT NULL,
    "IBAN" character varying(30) COLLATE pg_catalog."default",
    "BankCardNo" character varying(50) COLLATE pg_catalog."default",
    "NationalID" text COLLATE pg_catalog."default",
    "PassportNo" character varying(20) COLLATE pg_catalog."default",
    "TaxNumber" character varying(20) COLLATE pg_catalog."default",
    "Nationality" character varying(50) COLLATE pg_catalog."default",
    "DOB" timestamp without time zone NOT NULL,
    "DOJ" timestamp without time zone NOT NULL,
    "Gender" text COLLATE pg_catalog."default" NOT NULL,
    "Email" text COLLATE pg_catalog."default" NOT NULL,
    "MobileNumber" character varying(20) COLLATE pg_catalog."default",
    "BankId" integer,
    "EmploymentTypeId" integer NOT NULL,
    "DepartmentId" integer NOT NULL,
    "RoleId" integer NOT NULL,
    "ApprovalGroupId" integer NOT NULL,
    "BusinessAreaApprovalGroupId" integer NOT NULL,
    "BusinessAreaRoleId" integer NOT NULL,
    "BusinessAreaId" integer NOT NULL,
    "CurrencyTypeId" integer NOT NULL,
    "StatusTypeId" integer NOT NULL
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."Employees"
    OWNER to postgres;
-- Index: IX_Employees_ApprovalGroupId

-- DROP INDEX IF EXISTS public."IX_Employees_ApprovalGroupId";

CREATE INDEX IF NOT EXISTS "IX_Employees_ApprovalGroupId"
    ON public."Employees" USING btree
    ("ApprovalGroupId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_Employees_BankId

-- DROP INDEX IF EXISTS public."IX_Employees_BankId";

CREATE INDEX IF NOT EXISTS "IX_Employees_BankId"
    ON public."Employees" USING btree
    ("BankId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_Employees_BusinessAreaApprovalGroupId

-- DROP INDEX IF EXISTS public."IX_Employees_BusinessAreaApprovalGroupId";

CREATE INDEX IF NOT EXISTS "IX_Employees_BusinessAreaApprovalGroupId"
    ON public."Employees" USING btree
    ("BusinessAreaApprovalGroupId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_Employees_BusinessAreaId

-- DROP INDEX IF EXISTS public."IX_Employees_BusinessAreaId";

CREATE INDEX IF NOT EXISTS "IX_Employees_BusinessAreaId"
    ON public."Employees" USING btree
    ("BusinessAreaId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_Employees_BusinessAreaRoleId

-- DROP INDEX IF EXISTS public."IX_Employees_BusinessAreaRoleId";

CREATE INDEX IF NOT EXISTS "IX_Employees_BusinessAreaRoleId"
    ON public."Employees" USING btree
    ("BusinessAreaRoleId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_Employees_CurrencyTypeId

-- DROP INDEX IF EXISTS public."IX_Employees_CurrencyTypeId";

CREATE INDEX IF NOT EXISTS "IX_Employees_CurrencyTypeId"
    ON public."Employees" USING btree
    ("CurrencyTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_Employees_DepartmentId

-- DROP INDEX IF EXISTS public."IX_Employees_DepartmentId";

CREATE INDEX IF NOT EXISTS "IX_Employees_DepartmentId"
    ON public."Employees" USING btree
    ("DepartmentId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_Employees_EmploymentTypeId

-- DROP INDEX IF EXISTS public."IX_Employees_EmploymentTypeId";

CREATE INDEX IF NOT EXISTS "IX_Employees_EmploymentTypeId"
    ON public."Employees" USING btree
    ("EmploymentTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_Employees_RoleId

-- DROP INDEX IF EXISTS public."IX_Employees_RoleId";

CREATE INDEX IF NOT EXISTS "IX_Employees_RoleId"
    ON public."Employees" USING btree
    ("RoleId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_Employees_StatusTypeId

-- DROP INDEX IF EXISTS public."IX_Employees_StatusTypeId";

CREATE INDEX IF NOT EXISTS "IX_Employees_StatusTypeId"
    ON public."Employees" USING btree
    ("StatusTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;

INSERT INTO public."Employees" (
	"Id", "FirstName", "MiddleName", "LastName", "EmpCode", "BankAccount", "IBAN", "BankCardNo", "NationalID", "PassportNo", "TaxNumber", "Nationality", "DOB", "DOJ", "Gender", "Email", "MobileNumber", "BankId", "EmploymentTypeId", "DepartmentId", "RoleId", "ApprovalGroupId", "BusinessAreaApprovalGroupId", "BusinessAreaRoleId", "BusinessAreaId", "CurrencyTypeId", "StatusTypeId")
	          VALUES (1, 'atocash admin', NULL, 'E-11000', 'E-11000', '235453565636',  'AD1400080001001234567890', '3453564667678854', '3249094', 'ZT445666', '343423123532423', 'Saudi', '2021-09-08 11:33:30.165', '2022-09-27 11:34:43.152', 'male', 'atocash@gmail.com', '24245435',1, 1, 1, 1, 1, 1, 1, 1, 1, 1);
	
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.EmpCurrentPettyCashBalances

-- DROP TABLE IF EXISTS public."EmpCurrentPettyCashBalances";

CREATE TABLE IF NOT EXISTS public."EmpCurrentPettyCashBalances"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "EmployeeId" integer NOT NULL,
    "CurBalance" double precision NOT NULL,
    "CashOnHand" double precision NOT NULL,
    "UpdatedOn" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_EmpCurrentPettyCashBalances" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_EmpCurrentPettyCashBalances_Employees_EmployeeId" FOREIGN KEY ("EmployeeId")
        REFERENCES public."Employees" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."EmpCurrentPettyCashBalances"
    OWNER to postgres;
-- Index: IX_EmpCurrentPettyCashBalances_EmployeeId

-- DROP INDEX IF EXISTS public."IX_EmpCurrentPettyCashBalances_EmployeeId";

CREATE INDEX IF NOT EXISTS "IX_EmpCurrentPettyCashBalances_EmployeeId"
    ON public."EmpCurrentPettyCashBalances" USING btree
    ("EmployeeId" ASC NULLS LAST)
    TABLESPACE pg_default;


INSERT INTO public."EmpCurrentPettyCashBalances" ("Id", "EmployeeId", "CurBalance", "CashOnHand", "UpdatedOn") 
 VALUES (1, 1, 20000, 0, '2022-09-28 11:39:19.125081');
 
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------

-- Table: public.RequestTypes

-- DROP TABLE IF EXISTS public."RequestTypes";

CREATE TABLE IF NOT EXISTS public."RequestTypes"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "RequestName" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "RequestTypeDesc" character varying(150) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_RequestTypes" PRIMARY KEY ("Id")
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."RequestTypes"
    OWNER to postgres;
	
INSERT INTO public."RequestTypes" VALUES (1, 'Petty Cash Request', 'Petty Cash Request');
INSERT INTO public."RequestTypes" VALUES (2, 'Department Expense Reimbursement', 'All Department based expense reimbursement claims');
INSERT INTO public."RequestTypes" VALUES (3, 'Store Expense Reimbursement', 'All Store based expense reimbursement claims');


-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------

-- Table: public.VATRates

-- DROP TABLE IF EXISTS public."VATRates";

CREATE TABLE IF NOT EXISTS public."VATRates"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "VATPercentage" real NOT NULL,
    CONSTRAINT "PK_VATRates" PRIMARY KEY ("Id")
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."VATRates"
    OWNER to postgres;
	
	INSERT INTO public."VATRates"(
	"Id", "VATPercentage")
	VALUES (1, 15);
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<< IDENTITY FRAMEWORK >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-----------------
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.AspNetUsers

-- DROP TABLE IF EXISTS public."AspNetUsers";

CREATE TABLE IF NOT EXISTS public."AspNetUsers"
(
    "Id" text COLLATE pg_catalog."default" NOT NULL,
    "EmployeeId" integer NOT NULL,
    "UserName" character varying(256) COLLATE pg_catalog."default",
    "NormalizedUserName" character varying(256) COLLATE pg_catalog."default",
    "Email" character varying(256) COLLATE pg_catalog."default",
    "NormalizedEmail" character varying(256) COLLATE pg_catalog."default",
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text COLLATE pg_catalog."default",
    "SecurityStamp" text COLLATE pg_catalog."default",
    "ConcurrencyStamp" text COLLATE pg_catalog."default",
    "PhoneNumber" text COLLATE pg_catalog."default",
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id")
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."AspNetUsers"
    OWNER to postgres;
-- Index: EmailIndex

-- DROP INDEX IF EXISTS public."EmailIndex";

CREATE INDEX IF NOT EXISTS "EmailIndex"
    ON public."AspNetUsers" USING btree
    ("NormalizedEmail" COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: UserNameIndex

-- DROP INDEX IF EXISTS public."UserNameIndex";

CREATE UNIQUE INDEX IF NOT EXISTS "UserNameIndex"
    ON public."AspNetUsers" USING btree
    ("NormalizedUserName" COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;

INSERT INTO public."AspNetUsers" VALUES ('d57cc679-f137-4eaf-bc55-339687ca8d89', 1, 'atocash@gmail.com', 'ATOCASH@GMAIL.COM', 'atocash@gmail.com', 'ATOCASH@GMAIL.COM', false, 'AQAAAAEAACcQAAAAECt3xghizZE3rl6HJgnV85qAS0myEyzpMOksTN/oF0AL8ajtdMQZAywbHNVjVl2iGA==', 'BS7UMGFJ3AFJYU3NQHZITORPHIIAAMMC', '21068d4a-aab2-4402-8321-6e5eea58fc08', NULL, false, false, NULL, true, 0);

-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.AspNetRoles

-- DROP TABLE IF EXISTS public."AspNetRoles";

CREATE TABLE IF NOT EXISTS public."AspNetRoles"
(
    "Id" text COLLATE pg_catalog."default" NOT NULL,
    "Name" character varying(256) COLLATE pg_catalog."default",
    "NormalizedName" character varying(256) COLLATE pg_catalog."default",
    "ConcurrencyStamp" text COLLATE pg_catalog."default",
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."AspNetRoles"
    OWNER to postgres;
-- Index: RoleNameIndex

-- DROP INDEX IF EXISTS public."RoleNameIndex";

CREATE UNIQUE INDEX IF NOT EXISTS "RoleNameIndex"
    ON public."AspNetRoles" USING btree
    ("NormalizedName" COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;


INSERT INTO public."AspNetRoles" ("Id", "Name", "NormalizedName", "ConcurrencyStamp") VALUES ('user2af3-dc89-4f3f-adaa-6c136358user', 'User', 'USER', 'auser2b1-5957-4d1b-8025-75143dff446a');
INSERT INTO public."AspNetRoles" ("Id", "Name", "NormalizedName", "ConcurrencyStamp") VALUES ('2abfbara-dc89-4f3f-adaa-6c136358e9b0', 'Manager', 'MANAGER', 'a516bara-5957-4d1b-8025-75143dff446a');
INSERT INTO public."AspNetRoles" ("Id", "Name", "NormalizedName", "ConcurrencyStamp") VALUES ('2abftera-dc89-4f3f-adaa-6c136358e9b0', 'Finmgr', 'FINMGR', 'a516tera-5957-4d1b-8025-75143dff446a');
INSERT INTO public."AspNetRoles" ("Id", "Name", "NormalizedName", "ConcurrencyStamp") VALUES ('2abfsaud-dc89-4f3f-adaa-6c136358e9b0', 'AccPayable', 'ACCPAYABLE', 'a516saud-5957-4d1b-8025-75143dff446a');
 INSERT INTO public."AspNetRoles" ("Id", "Name", "NormalizedName", "ConcurrencyStamp") VALUES ('2abf2af3-dc89-4f3f-adaa-6c136358e9b0', 'Admin', 'ADMIN', 'a51632b1-5957-4d1b-8025-75143dff446a');


-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.AspNetUserRoles

-- DROP TABLE IF EXISTS public."AspNetUserRoles";

CREATE TABLE IF NOT EXISTS public."AspNetUserRoles"
(
    "UserId" text COLLATE pg_catalog."default" NOT NULL,
    "RoleId" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId")
        REFERENCES public."AspNetRoles" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId")
        REFERENCES public."AspNetUsers" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."AspNetUserRoles"
    OWNER to postgres;
-- Index: IX_AspNetUserRoles_RoleId

-- DROP INDEX IF EXISTS public."IX_AspNetUserRoles_RoleId";

CREATE INDEX IF NOT EXISTS "IX_AspNetUserRoles_RoleId"
    ON public."AspNetUserRoles" USING btree
    ("RoleId" COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;

--{ ONLY ADMIN ROLE ASSIGNED TO THE FIRST EMPLOYEE}
INSERT INTO public."AspNetUserRoles" VALUES ('d57cc679-f137-4eaf-bc55-339687ca8d89', '2abf2af3-dc89-4f3f-adaa-6c136358e9b0');

-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------



-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<| | | | | | | | | | | | | |>>>>>>>>>>>------------------------------
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<< ALL OTHER EMPTY TABLES >>>>>>>>>>>>>------------------------------
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<| | | | | | | | | | | | | |>>>>>>>>>>>------------------------------
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------

-- Table: public.ApprovalRoleMaps

-- DROP TABLE IF EXISTS public."ApprovalRoleMaps";

CREATE TABLE IF NOT EXISTS public."ApprovalRoleMaps"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "ApprovalGroupId" integer NOT NULL,
    "RoleId" integer NOT NULL,
    "ApprovalLevelId" integer NOT NULL,
    CONSTRAINT "PK_ApprovalRoleMaps" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ApprovalRoleMaps_ApprovalGroups_ApprovalGroupId" FOREIGN KEY ("ApprovalGroupId")
        REFERENCES public."ApprovalGroups" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ApprovalRoleMaps_ApprovalLevels_ApprovalLevelId" FOREIGN KEY ("ApprovalLevelId")
        REFERENCES public."ApprovalLevels" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ApprovalRoleMaps_JobRoles_RoleId" FOREIGN KEY ("RoleId")
        REFERENCES public."JobRoles" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."ApprovalRoleMaps"
    OWNER to postgres;
-- Index: IX_ApprovalRoleMaps_ApprovalGroupId

-- DROP INDEX IF EXISTS public."IX_ApprovalRoleMaps_ApprovalGroupId";

CREATE INDEX IF NOT EXISTS "IX_ApprovalRoleMaps_ApprovalGroupId"
    ON public."ApprovalRoleMaps" USING btree
    ("ApprovalGroupId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ApprovalRoleMaps_ApprovalLevelId

-- DROP INDEX IF EXISTS public."IX_ApprovalRoleMaps_ApprovalLevelId";

CREATE INDEX IF NOT EXISTS "IX_ApprovalRoleMaps_ApprovalLevelId"
    ON public."ApprovalRoleMaps" USING btree
    ("ApprovalLevelId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ApprovalRoleMaps_RoleId

-- DROP INDEX IF EXISTS public."IX_ApprovalRoleMaps_RoleId";

CREATE INDEX IF NOT EXISTS "IX_ApprovalRoleMaps_RoleId"
    ON public."ApprovalRoleMaps" USING btree
    ("RoleId" ASC NULLS LAST)
    TABLESPACE pg_default;
	
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.AspNetRoleClaims

-- DROP TABLE IF EXISTS public."AspNetRoleClaims";

CREATE TABLE IF NOT EXISTS public."AspNetRoleClaims"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "RoleId" text COLLATE pg_catalog."default" NOT NULL,
    "ClaimType" text COLLATE pg_catalog."default",
    "ClaimValue" text COLLATE pg_catalog."default",
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId")
        REFERENCES public."AspNetRoles" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."AspNetRoleClaims"
    OWNER to postgres;
-- Index: IX_AspNetRoleClaims_RoleId

-- DROP INDEX IF EXISTS public."IX_AspNetRoleClaims_RoleId";

CREATE INDEX IF NOT EXISTS "IX_AspNetRoleClaims_RoleId"
    ON public."AspNetRoleClaims" USING btree
    ("RoleId" COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
	
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------



-- Table: public.AspNetUserClaims

-- DROP TABLE IF EXISTS public."AspNetUserClaims";

CREATE TABLE IF NOT EXISTS public."AspNetUserClaims"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "UserId" text COLLATE pg_catalog."default" NOT NULL,
    "ClaimType" text COLLATE pg_catalog."default",
    "ClaimValue" text COLLATE pg_catalog."default",
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId")
        REFERENCES public."AspNetUsers" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."AspNetUserClaims"
    OWNER to postgres;
-- Index: IX_AspNetUserClaims_UserId

-- DROP INDEX IF EXISTS public."IX_AspNetUserClaims_UserId";

CREATE INDEX IF NOT EXISTS "IX_AspNetUserClaims_UserId"
    ON public."AspNetUserClaims" USING btree
    ("UserId" COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
	


-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.AspNetUserLogins

-- DROP TABLE IF EXISTS public."AspNetUserLogins";

CREATE TABLE IF NOT EXISTS public."AspNetUserLogins"
(
    "LoginProvider" text COLLATE pg_catalog."default" NOT NULL,
    "ProviderKey" text COLLATE pg_catalog."default" NOT NULL,
    "ProviderDisplayName" text COLLATE pg_catalog."default",
    "UserId" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId")
        REFERENCES public."AspNetUsers" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."AspNetUserLogins"
    OWNER to postgres;
-- Index: IX_AspNetUserLogins_UserId

-- DROP INDEX IF EXISTS public."IX_AspNetUserLogins_UserId";

CREATE INDEX IF NOT EXISTS "IX_AspNetUserLogins_UserId"
    ON public."AspNetUserLogins" USING btree
    ("UserId" COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.AspNetUserTokens

-- DROP TABLE IF EXISTS public."AspNetUserTokens";

CREATE TABLE IF NOT EXISTS public."AspNetUserTokens"
(
    "UserId" text COLLATE pg_catalog."default" NOT NULL,
    "LoginProvider" text COLLATE pg_catalog."default" NOT NULL,
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    "Value" text COLLATE pg_catalog."default",
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId")
        REFERENCES public."AspNetUsers" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."AspNetUserTokens"
    OWNER to postgres;


-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.ExpenseCategories

-- DROP TABLE IF EXISTS public."ExpenseCategories";

CREATE TABLE IF NOT EXISTS public."ExpenseCategories"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "ExpenseCategoryName" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "ExpenseCategoryDesc" character varying(150) COLLATE pg_catalog."default" NOT NULL,
    "IsBusinessCategory" boolean NOT NULL,
    "StatusTypeId" integer NOT NULL,
    CONSTRAINT "PK_ExpenseCategories" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ExpenseCategories_StatusTypes_StatusTypeId" FOREIGN KEY ("StatusTypeId")
        REFERENCES public."StatusTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."ExpenseCategories"
    OWNER to postgres;
-- Index: IX_ExpenseCategories_StatusTypeId

-- DROP INDEX IF EXISTS public."IX_ExpenseCategories_StatusTypeId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseCategories_StatusTypeId"
    ON public."ExpenseCategories" USING btree
    ("StatusTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
	
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.GeneralLedger

-- DROP TABLE IF EXISTS public."GeneralLedger";

CREATE TABLE IF NOT EXISTS public."GeneralLedger"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "GeneralLedgerAccountNo" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "GeneralLedgerAccountName" character varying(150) COLLATE pg_catalog."default" NOT NULL,
    "StatusTypeId" integer NOT NULL,
    CONSTRAINT "PK_GeneralLedger" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_GeneralLedger_StatusTypes_StatusTypeId" FOREIGN KEY ("StatusTypeId")
        REFERENCES public."StatusTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."GeneralLedger"
    OWNER to postgres;
-- Index: IX_GeneralLedger_StatusTypeId

-- DROP INDEX IF EXISTS public."IX_GeneralLedger_StatusTypeId";

CREATE INDEX IF NOT EXISTS "IX_GeneralLedger_StatusTypeId"
    ON public."GeneralLedger" USING btree
    ("StatusTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;

-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------


-- Table: public.ExpenseTypes

-- DROP TABLE IF EXISTS public."ExpenseTypes";

CREATE TABLE IF NOT EXISTS public."ExpenseTypes"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "ExpenseTypeName" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "ExpenseTypeDesc" character varying(150) COLLATE pg_catalog."default" NOT NULL,
    "ExpenseCategoryId" integer NOT NULL,
    "GeneralLedgerId" integer NOT NULL,
    "StatusTypeId" integer NOT NULL,
    CONSTRAINT "PK_ExpenseTypes" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ExpenseTypes_ExpenseCategories_ExpenseCategoryId" FOREIGN KEY ("ExpenseCategoryId")
        REFERENCES public."ExpenseCategories" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ExpenseTypes_GeneralLedger_GeneralLedgerId" FOREIGN KEY ("GeneralLedgerId")
        REFERENCES public."GeneralLedger" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ExpenseTypes_StatusTypes_StatusTypeId" FOREIGN KEY ("StatusTypeId")
        REFERENCES public."StatusTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."ExpenseTypes"
    OWNER to postgres;
-- Index: IX_ExpenseTypes_ExpenseCategoryId

-- DROP INDEX IF EXISTS public."IX_ExpenseTypes_ExpenseCategoryId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseTypes_ExpenseCategoryId"
    ON public."ExpenseTypes" USING btree
    ("ExpenseCategoryId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseTypes_GeneralLedgerId

-- DROP INDEX IF EXISTS public."IX_ExpenseTypes_GeneralLedgerId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseTypes_GeneralLedgerId"
    ON public."ExpenseTypes" USING btree
    ("GeneralLedgerId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseTypes_StatusTypeId

-- DROP INDEX IF EXISTS public."IX_ExpenseTypes_StatusTypeId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseTypes_StatusTypeId"
    ON public."ExpenseTypes" USING btree
    ("StatusTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;

-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.Projects

-- DROP TABLE IF EXISTS public."Projects";

CREATE TABLE IF NOT EXISTS public."Projects"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "ProjectName" character varying(25) COLLATE pg_catalog."default" NOT NULL,
    "CostCenterId" integer NOT NULL,
    "ProjectManagerId" integer NOT NULL,
    "ProjectDesc" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "StatusTypeId" integer NOT NULL,
    CONSTRAINT "PK_Projects" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Projects_CostCenters_CostCenterId" FOREIGN KEY ("CostCenterId")
        REFERENCES public."CostCenters" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_Projects_Employees_ProjectManagerId" FOREIGN KEY ("ProjectManagerId")
        REFERENCES public."Employees" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_Projects_StatusTypes_StatusTypeId" FOREIGN KEY ("StatusTypeId")
        REFERENCES public."StatusTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."Projects"
    OWNER to postgres;
-- Index: IX_Projects_CostCenterId

-- DROP INDEX IF EXISTS public."IX_Projects_CostCenterId";

CREATE INDEX IF NOT EXISTS "IX_Projects_CostCenterId"
    ON public."Projects" USING btree
    ("CostCenterId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_Projects_ProjectManagerId

-- DROP INDEX IF EXISTS public."IX_Projects_ProjectManagerId";

CREATE INDEX IF NOT EXISTS "IX_Projects_ProjectManagerId"
    ON public."Projects" USING btree
    ("ProjectManagerId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_Projects_StatusTypeId

-- DROP INDEX IF EXISTS public."IX_Projects_StatusTypeId";

CREATE INDEX IF NOT EXISTS "IX_Projects_StatusTypeId"
    ON public."Projects" USING btree
    ("StatusTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.SubProjects

-- DROP TABLE IF EXISTS public."SubProjects";

CREATE TABLE IF NOT EXISTS public."SubProjects"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "ProjectId" integer NOT NULL,
    "SubProjectName" character varying(25) COLLATE pg_catalog."default" NOT NULL,
    "SubProjectDesc" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_SubProjects" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_SubProjects_Projects_ProjectId" FOREIGN KEY ("ProjectId")
        REFERENCES public."Projects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."SubProjects"
    OWNER to postgres;
-- Index: IX_SubProjects_ProjectId

-- DROP INDEX IF EXISTS public."IX_SubProjects_ProjectId";

CREATE INDEX IF NOT EXISTS "IX_SubProjects_ProjectId"
    ON public."SubProjects" USING btree
    ("ProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;

-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.WorkTasks

-- DROP TABLE IF EXISTS public."WorkTasks";

CREATE TABLE IF NOT EXISTS public."WorkTasks"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "SubProjectId" integer NOT NULL,
    "TaskName" character varying(25) COLLATE pg_catalog."default" NOT NULL,
    "TaskDesc" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_WorkTasks" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_WorkTasks_SubProjects_SubProjectId" FOREIGN KEY ("SubProjectId")
        REFERENCES public."SubProjects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."WorkTasks"
    OWNER to postgres;
-- Index: IX_WorkTasks_SubProjectId

-- DROP INDEX IF EXISTS public."IX_WorkTasks_SubProjectId";

CREATE INDEX IF NOT EXISTS "IX_WorkTasks_SubProjectId"
    ON public."WorkTasks" USING btree
    ("SubProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;
	
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------	
	
	
-- Table: public.ProjectManagements

-- DROP TABLE IF EXISTS public."ProjectManagements";

CREATE TABLE IF NOT EXISTS public."ProjectManagements"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "ProjectId" integer NOT NULL,
    "EmployeeId" integer NOT NULL,
    CONSTRAINT "PK_ProjectManagements" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ProjectManagements_Employees_EmployeeId" FOREIGN KEY ("EmployeeId")
        REFERENCES public."Employees" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ProjectManagements_Projects_ProjectId" FOREIGN KEY ("ProjectId")
        REFERENCES public."Projects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."ProjectManagements"
    OWNER to postgres;
-- Index: IX_ProjectManagements_EmployeeId

-- DROP INDEX IF EXISTS public."IX_ProjectManagements_EmployeeId";

CREATE INDEX IF NOT EXISTS "IX_ProjectManagements_EmployeeId"
    ON public."ProjectManagements" USING btree
    ("EmployeeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ProjectManagements_ProjectId

-- DROP INDEX IF EXISTS public."IX_ProjectManagements_ProjectId";

CREATE INDEX IF NOT EXISTS "IX_ProjectManagements_ProjectId"
    ON public."ProjectManagements" USING btree
    ("ProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;

-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.PettyCashRequests

-- DROP TABLE IF EXISTS public."PettyCashRequests";

CREATE TABLE IF NOT EXISTS public."PettyCashRequests"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "EmployeeId" integer NOT NULL,
    "PettyClaimAmount" double precision NOT NULL,
    "PettyClaimRequestDesc" character varying(150) COLLATE pg_catalog."default" NOT NULL,
    "CashReqDate" timestamp without time zone NOT NULL,
    "CurrencyTypeId" integer NOT NULL,
    "BusinessAreaId" integer,
    "DepartmentId" integer,
    "ProjectId" integer,
    "SubProjectId" integer,
    "WorkTaskId" integer,
    "CostCenterId" integer,
    "ApprovalStatusTypeId" integer NOT NULL,
    "ApprovedDate" timestamp without time zone,
    "Comments" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_PettyCashRequests" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_PettyCashRequests_ApprovalStatusTypes_ApprovalStatusTypeId" FOREIGN KEY ("ApprovalStatusTypeId")
        REFERENCES public."ApprovalStatusTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_PettyCashRequests_BusinessAreas_BusinessAreaId" FOREIGN KEY ("BusinessAreaId")
        REFERENCES public."BusinessAreas" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_PettyCashRequests_CostCenters_CostCenterId" FOREIGN KEY ("CostCenterId")
        REFERENCES public."CostCenters" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_PettyCashRequests_CurrencyTypes_CurrencyTypeId" FOREIGN KEY ("CurrencyTypeId")
        REFERENCES public."CurrencyTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_PettyCashRequests_Departments_DepartmentId" FOREIGN KEY ("DepartmentId")
        REFERENCES public."Departments" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_PettyCashRequests_Employees_EmployeeId" FOREIGN KEY ("EmployeeId")
        REFERENCES public."Employees" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_PettyCashRequests_Projects_ProjectId" FOREIGN KEY ("ProjectId")
        REFERENCES public."Projects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_PettyCashRequests_SubProjects_SubProjectId" FOREIGN KEY ("SubProjectId")
        REFERENCES public."SubProjects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_PettyCashRequests_WorkTasks_WorkTaskId" FOREIGN KEY ("WorkTaskId")
        REFERENCES public."WorkTasks" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."PettyCashRequests"
    OWNER to postgres;
-- Index: IX_PettyCashRequests_ApprovalStatusTypeId

-- DROP INDEX IF EXISTS public."IX_PettyCashRequests_ApprovalStatusTypeId";

CREATE INDEX IF NOT EXISTS "IX_PettyCashRequests_ApprovalStatusTypeId"
    ON public."PettyCashRequests" USING btree
    ("ApprovalStatusTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_PettyCashRequests_BusinessAreaId

-- DROP INDEX IF EXISTS public."IX_PettyCashRequests_BusinessAreaId";

CREATE INDEX IF NOT EXISTS "IX_PettyCashRequests_BusinessAreaId"
    ON public."PettyCashRequests" USING btree
    ("BusinessAreaId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_PettyCashRequests_CostCenterId

-- DROP INDEX IF EXISTS public."IX_PettyCashRequests_CostCenterId";

CREATE INDEX IF NOT EXISTS "IX_PettyCashRequests_CostCenterId"
    ON public."PettyCashRequests" USING btree
    ("CostCenterId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_PettyCashRequests_CurrencyTypeId

-- DROP INDEX IF EXISTS public."IX_PettyCashRequests_CurrencyTypeId";

CREATE INDEX IF NOT EXISTS "IX_PettyCashRequests_CurrencyTypeId"
    ON public."PettyCashRequests" USING btree
    ("CurrencyTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_PettyCashRequests_DepartmentId

-- DROP INDEX IF EXISTS public."IX_PettyCashRequests_DepartmentId";

CREATE INDEX IF NOT EXISTS "IX_PettyCashRequests_DepartmentId"
    ON public."PettyCashRequests" USING btree
    ("DepartmentId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_PettyCashRequests_EmployeeId

-- DROP INDEX IF EXISTS public."IX_PettyCashRequests_EmployeeId";

CREATE INDEX IF NOT EXISTS "IX_PettyCashRequests_EmployeeId"
    ON public."PettyCashRequests" USING btree
    ("EmployeeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_PettyCashRequests_ProjectId

-- DROP INDEX IF EXISTS public."IX_PettyCashRequests_ProjectId";

CREATE INDEX IF NOT EXISTS "IX_PettyCashRequests_ProjectId"
    ON public."PettyCashRequests" USING btree
    ("ProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_PettyCashRequests_SubProjectId

-- DROP INDEX IF EXISTS public."IX_PettyCashRequests_SubProjectId";

CREATE INDEX IF NOT EXISTS "IX_PettyCashRequests_SubProjectId"
    ON public."PettyCashRequests" USING btree
    ("SubProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_PettyCashRequests_WorkTaskId

-- DROP INDEX IF EXISTS public."IX_PettyCashRequests_WorkTaskId";

CREATE INDEX IF NOT EXISTS "IX_PettyCashRequests_WorkTaskId"
    ON public."PettyCashRequests" USING btree
    ("WorkTaskId" ASC NULLS LAST)
    TABLESPACE pg_default;
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------


-- Table: public.ClaimApprovalStatusTrackers

-- DROP TABLE IF EXISTS public."ClaimApprovalStatusTrackers";

CREATE TABLE IF NOT EXISTS public."ClaimApprovalStatusTrackers"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "EmployeeId" integer NOT NULL,
    "PettyCashRequestId" integer,
    "DepartmentId" integer,
    "ProjManagerId" integer,
    "ProjectId" integer,
    "SubProjectId" integer,
    "WorkTaskId" integer,
    "ApprovalGroupId" integer NOT NULL,
    "RoleId" integer NOT NULL,
    "ApprovalLevelId" integer NOT NULL,
    "ReqDate" timestamp without time zone NOT NULL,
    "FinalApprovedDate" timestamp without time zone,
    "ApprovalStatusTypeId" integer NOT NULL,
    "Comments" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_ClaimApprovalStatusTrackers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ClaimApprovalStatusTrackers_ApprovalLevels_ApprovalLevelId" FOREIGN KEY ("ApprovalLevelId")
        REFERENCES public."ApprovalLevels" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ClaimApprovalStatusTrackers_ApprovalStatusTypes_ApprovalSta~" FOREIGN KEY ("ApprovalStatusTypeId")
        REFERENCES public."ApprovalStatusTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ClaimApprovalStatusTrackers_Departments_DepartmentId" FOREIGN KEY ("DepartmentId")
        REFERENCES public."Departments" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ClaimApprovalStatusTrackers_Employees_EmployeeId" FOREIGN KEY ("EmployeeId")
        REFERENCES public."Employees" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ClaimApprovalStatusTrackers_Employees_ProjManagerId" FOREIGN KEY ("ProjManagerId")
        REFERENCES public."Employees" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ClaimApprovalStatusTrackers_JobRoles_RoleId" FOREIGN KEY ("RoleId")
        REFERENCES public."JobRoles" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ClaimApprovalStatusTrackers_PettyCashRequests_PettyCashRequ~" FOREIGN KEY ("PettyCashRequestId")
        REFERENCES public."PettyCashRequests" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ClaimApprovalStatusTrackers_Projects_ProjectId" FOREIGN KEY ("ProjectId")
        REFERENCES public."Projects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ClaimApprovalStatusTrackers_SubProjects_SubProjectId" FOREIGN KEY ("SubProjectId")
        REFERENCES public."SubProjects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ClaimApprovalStatusTrackers_WorkTasks_WorkTaskId" FOREIGN KEY ("WorkTaskId")
        REFERENCES public."WorkTasks" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."ClaimApprovalStatusTrackers"
    OWNER to postgres;
-- Index: IX_ClaimApprovalStatusTrackers_ApprovalLevelId

-- DROP INDEX IF EXISTS public."IX_ClaimApprovalStatusTrackers_ApprovalLevelId";

CREATE INDEX IF NOT EXISTS "IX_ClaimApprovalStatusTrackers_ApprovalLevelId"
    ON public."ClaimApprovalStatusTrackers" USING btree
    ("ApprovalLevelId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ClaimApprovalStatusTrackers_ApprovalStatusTypeId

-- DROP INDEX IF EXISTS public."IX_ClaimApprovalStatusTrackers_ApprovalStatusTypeId";

CREATE INDEX IF NOT EXISTS "IX_ClaimApprovalStatusTrackers_ApprovalStatusTypeId"
    ON public."ClaimApprovalStatusTrackers" USING btree
    ("ApprovalStatusTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ClaimApprovalStatusTrackers_DepartmentId

-- DROP INDEX IF EXISTS public."IX_ClaimApprovalStatusTrackers_DepartmentId";

CREATE INDEX IF NOT EXISTS "IX_ClaimApprovalStatusTrackers_DepartmentId"
    ON public."ClaimApprovalStatusTrackers" USING btree
    ("DepartmentId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ClaimApprovalStatusTrackers_EmployeeId

-- DROP INDEX IF EXISTS public."IX_ClaimApprovalStatusTrackers_EmployeeId";

CREATE INDEX IF NOT EXISTS "IX_ClaimApprovalStatusTrackers_EmployeeId"
    ON public."ClaimApprovalStatusTrackers" USING btree
    ("EmployeeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ClaimApprovalStatusTrackers_PettyCashRequestId

-- DROP INDEX IF EXISTS public."IX_ClaimApprovalStatusTrackers_PettyCashRequestId";

CREATE INDEX IF NOT EXISTS "IX_ClaimApprovalStatusTrackers_PettyCashRequestId"
    ON public."ClaimApprovalStatusTrackers" USING btree
    ("PettyCashRequestId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ClaimApprovalStatusTrackers_ProjManagerId

-- DROP INDEX IF EXISTS public."IX_ClaimApprovalStatusTrackers_ProjManagerId";

CREATE INDEX IF NOT EXISTS "IX_ClaimApprovalStatusTrackers_ProjManagerId"
    ON public."ClaimApprovalStatusTrackers" USING btree
    ("ProjManagerId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ClaimApprovalStatusTrackers_ProjectId

-- DROP INDEX IF EXISTS public."IX_ClaimApprovalStatusTrackers_ProjectId";

CREATE INDEX IF NOT EXISTS "IX_ClaimApprovalStatusTrackers_ProjectId"
    ON public."ClaimApprovalStatusTrackers" USING btree
    ("ProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ClaimApprovalStatusTrackers_RoleId

-- DROP INDEX IF EXISTS public."IX_ClaimApprovalStatusTrackers_RoleId";

CREATE INDEX IF NOT EXISTS "IX_ClaimApprovalStatusTrackers_RoleId"
    ON public."ClaimApprovalStatusTrackers" USING btree
    ("RoleId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ClaimApprovalStatusTrackers_SubProjectId

-- DROP INDEX IF EXISTS public."IX_ClaimApprovalStatusTrackers_SubProjectId";

CREATE INDEX IF NOT EXISTS "IX_ClaimApprovalStatusTrackers_SubProjectId"
    ON public."ClaimApprovalStatusTrackers" USING btree
    ("SubProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ClaimApprovalStatusTrackers_WorkTaskId

-- DROP INDEX IF EXISTS public."IX_ClaimApprovalStatusTrackers_WorkTaskId";

CREATE INDEX IF NOT EXISTS "IX_ClaimApprovalStatusTrackers_WorkTaskId"
    ON public."ClaimApprovalStatusTrackers" USING btree
    ("WorkTaskId" ASC NULLS LAST)
    TABLESPACE pg_default;

-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.ExpenseReimburseRequests

-- DROP TABLE IF EXISTS public."ExpenseReimburseRequests";

CREATE TABLE IF NOT EXISTS public."ExpenseReimburseRequests"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "ExpenseReportTitle" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    "EmployeeId" integer NOT NULL,
    "CurrencyTypeId" integer NOT NULL,
    "TotalClaimAmount" double precision NOT NULL,
    "ExpReimReqDate" timestamp without time zone NOT NULL,
    "IsBusinessAreaReq" boolean NOT NULL,
    "DepartmentId" integer,
    "BusinessAreaId" integer,
    "ProjectId" integer,
    "SubProjectId" integer,
    "WorkTaskId" integer,
    "CostCenterId" integer,
    "ApprovalStatusTypeId" integer NOT NULL,
    "ApprovedDate" timestamp without time zone,
    "Comments" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_ExpenseReimburseRequests" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ExpenseReimburseRequests_ApprovalStatusTypes_ApprovalStatus~" FOREIGN KEY ("ApprovalStatusTypeId")
        REFERENCES public."ApprovalStatusTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ExpenseReimburseRequests_BusinessAreas_BusinessAreaId" FOREIGN KEY ("BusinessAreaId")
        REFERENCES public."BusinessAreas" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ExpenseReimburseRequests_CostCenters_CostCenterId" FOREIGN KEY ("CostCenterId")
        REFERENCES public."CostCenters" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ExpenseReimburseRequests_CurrencyTypes_CurrencyTypeId" FOREIGN KEY ("CurrencyTypeId")
        REFERENCES public."CurrencyTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ExpenseReimburseRequests_Departments_DepartmentId" FOREIGN KEY ("DepartmentId")
        REFERENCES public."Departments" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ExpenseReimburseRequests_Employees_EmployeeId" FOREIGN KEY ("EmployeeId")
        REFERENCES public."Employees" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ExpenseReimburseRequests_Projects_ProjectId" FOREIGN KEY ("ProjectId")
        REFERENCES public."Projects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ExpenseReimburseRequests_SubProjects_SubProjectId" FOREIGN KEY ("SubProjectId")
        REFERENCES public."SubProjects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ExpenseReimburseRequests_WorkTasks_WorkTaskId" FOREIGN KEY ("WorkTaskId")
        REFERENCES public."WorkTasks" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."ExpenseReimburseRequests"
    OWNER to postgres;
-- Index: IX_ExpenseReimburseRequests_ApprovalStatusTypeId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseRequests_ApprovalStatusTypeId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseRequests_ApprovalStatusTypeId"
    ON public."ExpenseReimburseRequests" USING btree
    ("ApprovalStatusTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseRequests_BusinessAreaId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseRequests_BusinessAreaId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseRequests_BusinessAreaId"
    ON public."ExpenseReimburseRequests" USING btree
    ("BusinessAreaId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseRequests_CostCenterId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseRequests_CostCenterId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseRequests_CostCenterId"
    ON public."ExpenseReimburseRequests" USING btree
    ("CostCenterId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseRequests_CurrencyTypeId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseRequests_CurrencyTypeId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseRequests_CurrencyTypeId"
    ON public."ExpenseReimburseRequests" USING btree
    ("CurrencyTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseRequests_DepartmentId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseRequests_DepartmentId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseRequests_DepartmentId"
    ON public."ExpenseReimburseRequests" USING btree
    ("DepartmentId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseRequests_EmployeeId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseRequests_EmployeeId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseRequests_EmployeeId"
    ON public."ExpenseReimburseRequests" USING btree
    ("EmployeeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseRequests_ProjectId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseRequests_ProjectId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseRequests_ProjectId"
    ON public."ExpenseReimburseRequests" USING btree
    ("ProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseRequests_SubProjectId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseRequests_SubProjectId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseRequests_SubProjectId"
    ON public."ExpenseReimburseRequests" USING btree
    ("SubProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseRequests_WorkTaskId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseRequests_WorkTaskId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseRequests_WorkTaskId"
    ON public."ExpenseReimburseRequests" USING btree
    ("WorkTaskId" ASC NULLS LAST)
    TABLESPACE pg_default;
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------

-- Table: public.ExpenseReimburseStatusTrackers

-- DROP TABLE IF EXISTS public."ExpenseReimburseStatusTrackers";

CREATE TABLE IF NOT EXISTS public."ExpenseReimburseStatusTrackers"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "EmployeeId" integer NOT NULL,
    "ExpenseReimburseRequestId" integer NOT NULL,
    "CurrencyTypeId" integer NOT NULL,
    "TotalClaimAmount" double precision NOT NULL,
    "ExpReimReqDate" timestamp without time zone NOT NULL,
    "IsBusinessAreaReq" boolean NOT NULL,
    "BusinessAreaId" integer,
    "DepartmentId" integer,
    "ProjManagerId" integer,
    "ProjectId" integer,
    "SubProjectId" integer,
    "WorkTaskId" integer,
    "ApprovalGroupId" integer,
    "JobRoleId" integer NOT NULL,
    "BAApprovalGroupId" integer,
    "BARoleId" integer,
    "ApprovalLevelId" integer NOT NULL,
    "ApprovalStatusTypeId" integer NOT NULL,
    "ApprovedDate" timestamp without time zone,
    "Comments" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_ExpenseReimburseStatusTrackers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ExpenseReimburseStatusTrackers_ApprovalGroups_ApprovalGroup~" FOREIGN KEY ("ApprovalGroupId")
        REFERENCES public."ApprovalGroups" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ExpenseReimburseStatusTrackers_ApprovalGroups_BAApprovalGro~" FOREIGN KEY ("BAApprovalGroupId")
        REFERENCES public."ApprovalGroups" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ExpenseReimburseStatusTrackers_ApprovalLevels_ApprovalLevel~" FOREIGN KEY ("ApprovalLevelId")
        REFERENCES public."ApprovalLevels" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ExpenseReimburseStatusTrackers_ApprovalStatusTypes_Approval~" FOREIGN KEY ("ApprovalStatusTypeId")
        REFERENCES public."ApprovalStatusTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ExpenseReimburseStatusTrackers_BusinessAreas_BusinessAreaId" FOREIGN KEY ("BusinessAreaId")
        REFERENCES public."BusinessAreas" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ExpenseReimburseStatusTrackers_CurrencyTypes_CurrencyTypeId" FOREIGN KEY ("CurrencyTypeId")
        REFERENCES public."CurrencyTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ExpenseReimburseStatusTrackers_Departments_DepartmentId" FOREIGN KEY ("DepartmentId")
        REFERENCES public."Departments" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ExpenseReimburseStatusTrackers_Employees_EmployeeId" FOREIGN KEY ("EmployeeId")
        REFERENCES public."Employees" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ExpenseReimburseStatusTrackers_Employees_ProjManagerId" FOREIGN KEY ("ProjManagerId")
        REFERENCES public."Employees" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ExpenseReimburseStatusTrackers_ExpenseReimburseRequests_Exp~" FOREIGN KEY ("ExpenseReimburseRequestId")
        REFERENCES public."ExpenseReimburseRequests" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ExpenseReimburseStatusTrackers_JobRoles_BARoleId" FOREIGN KEY ("BARoleId")
        REFERENCES public."JobRoles" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ExpenseReimburseStatusTrackers_JobRoles_JobRoleId" FOREIGN KEY ("JobRoleId")
        REFERENCES public."JobRoles" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ExpenseReimburseStatusTrackers_Projects_ProjectId" FOREIGN KEY ("ProjectId")
        REFERENCES public."Projects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ExpenseReimburseStatusTrackers_SubProjects_SubProjectId" FOREIGN KEY ("SubProjectId")
        REFERENCES public."SubProjects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ExpenseReimburseStatusTrackers_WorkTasks_WorkTaskId" FOREIGN KEY ("WorkTaskId")
        REFERENCES public."WorkTasks" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."ExpenseReimburseStatusTrackers"
    OWNER to postgres;
-- Index: IX_ExpenseReimburseStatusTrackers_ApprovalGroupId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseStatusTrackers_ApprovalGroupId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseStatusTrackers_ApprovalGroupId"
    ON public."ExpenseReimburseStatusTrackers" USING btree
    ("ApprovalGroupId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseStatusTrackers_ApprovalLevelId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseStatusTrackers_ApprovalLevelId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseStatusTrackers_ApprovalLevelId"
    ON public."ExpenseReimburseStatusTrackers" USING btree
    ("ApprovalLevelId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseStatusTrackers_ApprovalStatusTypeId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseStatusTrackers_ApprovalStatusTypeId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseStatusTrackers_ApprovalStatusTypeId"
    ON public."ExpenseReimburseStatusTrackers" USING btree
    ("ApprovalStatusTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseStatusTrackers_BAApprovalGroupId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseStatusTrackers_BAApprovalGroupId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseStatusTrackers_BAApprovalGroupId"
    ON public."ExpenseReimburseStatusTrackers" USING btree
    ("BAApprovalGroupId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseStatusTrackers_BARoleId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseStatusTrackers_BARoleId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseStatusTrackers_BARoleId"
    ON public."ExpenseReimburseStatusTrackers" USING btree
    ("BARoleId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseStatusTrackers_BusinessAreaId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseStatusTrackers_BusinessAreaId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseStatusTrackers_BusinessAreaId"
    ON public."ExpenseReimburseStatusTrackers" USING btree
    ("BusinessAreaId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseStatusTrackers_CurrencyTypeId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseStatusTrackers_CurrencyTypeId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseStatusTrackers_CurrencyTypeId"
    ON public."ExpenseReimburseStatusTrackers" USING btree
    ("CurrencyTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseStatusTrackers_DepartmentId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseStatusTrackers_DepartmentId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseStatusTrackers_DepartmentId"
    ON public."ExpenseReimburseStatusTrackers" USING btree
    ("DepartmentId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseStatusTrackers_EmployeeId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseStatusTrackers_EmployeeId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseStatusTrackers_EmployeeId"
    ON public."ExpenseReimburseStatusTrackers" USING btree
    ("EmployeeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseStatusTrackers_ExpenseReimburseRequestId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseStatusTrackers_ExpenseReimburseRequestId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseStatusTrackers_ExpenseReimburseRequestId"
    ON public."ExpenseReimburseStatusTrackers" USING btree
    ("ExpenseReimburseRequestId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseStatusTrackers_JobRoleId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseStatusTrackers_JobRoleId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseStatusTrackers_JobRoleId"
    ON public."ExpenseReimburseStatusTrackers" USING btree
    ("JobRoleId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseStatusTrackers_ProjManagerId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseStatusTrackers_ProjManagerId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseStatusTrackers_ProjManagerId"
    ON public."ExpenseReimburseStatusTrackers" USING btree
    ("ProjManagerId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseStatusTrackers_ProjectId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseStatusTrackers_ProjectId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseStatusTrackers_ProjectId"
    ON public."ExpenseReimburseStatusTrackers" USING btree
    ("ProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseStatusTrackers_SubProjectId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseStatusTrackers_SubProjectId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseStatusTrackers_SubProjectId"
    ON public."ExpenseReimburseStatusTrackers" USING btree
    ("SubProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseReimburseStatusTrackers_WorkTaskId

-- DROP INDEX IF EXISTS public."IX_ExpenseReimburseStatusTrackers_WorkTaskId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseReimburseStatusTrackers_WorkTaskId"
    ON public."ExpenseReimburseStatusTrackers" USING btree
    ("WorkTaskId" ASC NULLS LAST)
    TABLESPACE pg_default;


-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.ExpenseSubClaims

-- DROP TABLE IF EXISTS public."ExpenseSubClaims";

CREATE TABLE IF NOT EXISTS public."ExpenseSubClaims"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "ExpenseReimburseRequestId" integer NOT NULL,
    "ExpenseCategoryId" integer NOT NULL,
    "ExpenseTypeId" integer NOT NULL,
    "ExpStrtDate" timestamp without time zone,
    "ExpEndDate" timestamp without time zone,
    "ExpNoOfDays" integer,
    "TaxNo" text COLLATE pg_catalog."default",
    "EmployeeId" integer NOT NULL,
    "ExpenseReimbClaimAmount" double precision NOT NULL,
    "DocumentIDs" text COLLATE pg_catalog."default",
    "InvoiceNo" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "IsVAT" boolean NOT NULL,
    "Tax" real NOT NULL,
    "TaxAmount" double precision NOT NULL,
    "InvoiceDate" timestamp without time zone NOT NULL,
    "Vendor" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "Location" character varying(20) COLLATE pg_catalog."default" NOT NULL,
    "Description" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    "IsBusinessAreaReq" boolean NOT NULL,
    "BusinessAreaId" integer,
    "DepartmentId" integer,
    "ProjectId" integer,
    "SubProjectId" integer,
    "WorkTaskId" integer,
    "CostCenterId" integer NOT NULL,
    CONSTRAINT "PK_ExpenseSubClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ExpenseSubClaims_BusinessAreas_BusinessAreaId" FOREIGN KEY ("BusinessAreaId")
        REFERENCES public."BusinessAreas" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ExpenseSubClaims_CostCenters_CostCenterId" FOREIGN KEY ("CostCenterId")
        REFERENCES public."CostCenters" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ExpenseSubClaims_Departments_DepartmentId" FOREIGN KEY ("DepartmentId")
        REFERENCES public."Departments" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ExpenseSubClaims_Employees_EmployeeId" FOREIGN KEY ("EmployeeId")
        REFERENCES public."Employees" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ExpenseSubClaims_ExpenseCategories_ExpenseCategoryId" FOREIGN KEY ("ExpenseCategoryId")
        REFERENCES public."ExpenseCategories" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ExpenseSubClaims_ExpenseReimburseRequests_ExpenseReimburseR~" FOREIGN KEY ("ExpenseReimburseRequestId")
        REFERENCES public."ExpenseReimburseRequests" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ExpenseSubClaims_ExpenseTypes_ExpenseTypeId" FOREIGN KEY ("ExpenseTypeId")
        REFERENCES public."ExpenseTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_ExpenseSubClaims_Projects_ProjectId" FOREIGN KEY ("ProjectId")
        REFERENCES public."Projects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ExpenseSubClaims_SubProjects_SubProjectId" FOREIGN KEY ("SubProjectId")
        REFERENCES public."SubProjects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_ExpenseSubClaims_WorkTasks_WorkTaskId" FOREIGN KEY ("WorkTaskId")
        REFERENCES public."WorkTasks" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."ExpenseSubClaims"
    OWNER to postgres;
-- Index: IX_ExpenseSubClaims_BusinessAreaId

-- DROP INDEX IF EXISTS public."IX_ExpenseSubClaims_BusinessAreaId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseSubClaims_BusinessAreaId"
    ON public."ExpenseSubClaims" USING btree
    ("BusinessAreaId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseSubClaims_CostCenterId

-- DROP INDEX IF EXISTS public."IX_ExpenseSubClaims_CostCenterId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseSubClaims_CostCenterId"
    ON public."ExpenseSubClaims" USING btree
    ("CostCenterId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseSubClaims_DepartmentId

-- DROP INDEX IF EXISTS public."IX_ExpenseSubClaims_DepartmentId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseSubClaims_DepartmentId"
    ON public."ExpenseSubClaims" USING btree
    ("DepartmentId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseSubClaims_EmployeeId

-- DROP INDEX IF EXISTS public."IX_ExpenseSubClaims_EmployeeId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseSubClaims_EmployeeId"
    ON public."ExpenseSubClaims" USING btree
    ("EmployeeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseSubClaims_ExpenseCategoryId

-- DROP INDEX IF EXISTS public."IX_ExpenseSubClaims_ExpenseCategoryId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseSubClaims_ExpenseCategoryId"
    ON public."ExpenseSubClaims" USING btree
    ("ExpenseCategoryId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseSubClaims_ExpenseReimburseRequestId

-- DROP INDEX IF EXISTS public."IX_ExpenseSubClaims_ExpenseReimburseRequestId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseSubClaims_ExpenseReimburseRequestId"
    ON public."ExpenseSubClaims" USING btree
    ("ExpenseReimburseRequestId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseSubClaims_ExpenseTypeId

-- DROP INDEX IF EXISTS public."IX_ExpenseSubClaims_ExpenseTypeId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseSubClaims_ExpenseTypeId"
    ON public."ExpenseSubClaims" USING btree
    ("ExpenseTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseSubClaims_ProjectId

-- DROP INDEX IF EXISTS public."IX_ExpenseSubClaims_ProjectId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseSubClaims_ProjectId"
    ON public."ExpenseSubClaims" USING btree
    ("ProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseSubClaims_SubProjectId

-- DROP INDEX IF EXISTS public."IX_ExpenseSubClaims_SubProjectId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseSubClaims_SubProjectId"
    ON public."ExpenseSubClaims" USING btree
    ("SubProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_ExpenseSubClaims_WorkTaskId

-- DROP INDEX IF EXISTS public."IX_ExpenseSubClaims_WorkTaskId";

CREATE INDEX IF NOT EXISTS "IX_ExpenseSubClaims_WorkTaskId"
    ON public."ExpenseSubClaims" USING btree
    ("WorkTaskId" ASC NULLS LAST)
    TABLESPACE pg_default;
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.FileDocuments

-- DROP TABLE IF EXISTS public."FileDocuments";

CREATE TABLE IF NOT EXISTS public."FileDocuments"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "UniqueFileName" text COLLATE pg_catalog."default" NOT NULL,
    "ActualFileName" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_FileDocuments" PRIMARY KEY ("Id")
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."FileDocuments"
    OWNER to postgres;



-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------

-- Table: public.DisbursementsAndClaimsMasters

-- DROP TABLE IF EXISTS public."DisbursementsAndClaimsMasters";

CREATE TABLE IF NOT EXISTS public."DisbursementsAndClaimsMasters"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "EmployeeId" integer NOT NULL,
    "PettyCashRequestId" integer,
    "ExpenseReimburseReqId" integer,
    "RequestTypeId" integer NOT NULL,
    "BusinessAreaId" integer,
    "IsBusinessAreaReq" boolean NOT NULL,
    "DepartmentId" integer,
    "ProjectId" integer,
    "SubProjectId" integer,
    "WorkTaskId" integer,
    "RecordDate" timestamp without time zone NOT NULL,
    "CurrencyTypeId" integer NOT NULL,
    "ClaimAmount" double precision NOT NULL,
    "AmountToWallet" double precision,
    "AmountToCredit" double precision,
    "IsSettledAmountCredited" boolean,
    "SettledDate" timestamp without time zone,
    "SettlementComment" character varying(150) COLLATE pg_catalog."default",
    "SettlementAccount" character varying(150) COLLATE pg_catalog."default",
    "SettlementBankCard" character varying(150) COLLATE pg_catalog."default",
    "AdditionalData" character varying(150) COLLATE pg_catalog."default",
    "CostCenterId" integer NOT NULL,
    "ApprovalStatusId" integer NOT NULL,
    CONSTRAINT "PK_DisbursementsAndClaimsMasters" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_DisbursementsAndClaimsMasters_ApprovalStatusTypes_ApprovalS~" FOREIGN KEY ("ApprovalStatusId")
        REFERENCES public."ApprovalStatusTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_DisbursementsAndClaimsMasters_BusinessAreas_BusinessAreaId" FOREIGN KEY ("BusinessAreaId")
        REFERENCES public."BusinessAreas" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_DisbursementsAndClaimsMasters_CostCenters_CostCenterId" FOREIGN KEY ("CostCenterId")
        REFERENCES public."CostCenters" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_DisbursementsAndClaimsMasters_CurrencyTypes_CurrencyTypeId" FOREIGN KEY ("CurrencyTypeId")
        REFERENCES public."CurrencyTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_DisbursementsAndClaimsMasters_Departments_DepartmentId" FOREIGN KEY ("DepartmentId")
        REFERENCES public."Departments" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_DisbursementsAndClaimsMasters_Employees_EmployeeId" FOREIGN KEY ("EmployeeId")
        REFERENCES public."Employees" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_DisbursementsAndClaimsMasters_ExpenseReimburseRequests_Expe~" FOREIGN KEY ("ExpenseReimburseReqId")
        REFERENCES public."ExpenseReimburseRequests" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_DisbursementsAndClaimsMasters_PettyCashRequests_PettyCashRe~" FOREIGN KEY ("PettyCashRequestId")
        REFERENCES public."PettyCashRequests" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_DisbursementsAndClaimsMasters_Projects_ProjectId" FOREIGN KEY ("ProjectId")
        REFERENCES public."Projects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_DisbursementsAndClaimsMasters_RequestTypes_RequestTypeId" FOREIGN KEY ("RequestTypeId")
        REFERENCES public."RequestTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_DisbursementsAndClaimsMasters_SubProjects_SubProjectId" FOREIGN KEY ("SubProjectId")
        REFERENCES public."SubProjects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_DisbursementsAndClaimsMasters_WorkTasks_WorkTaskId" FOREIGN KEY ("WorkTaskId")
        REFERENCES public."WorkTasks" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."DisbursementsAndClaimsMasters"
    OWNER to postgres;
-- Index: IX_DisbursementsAndClaimsMasters_ApprovalStatusId

-- DROP INDEX IF EXISTS public."IX_DisbursementsAndClaimsMasters_ApprovalStatusId";

CREATE INDEX IF NOT EXISTS "IX_DisbursementsAndClaimsMasters_ApprovalStatusId"
    ON public."DisbursementsAndClaimsMasters" USING btree
    ("ApprovalStatusId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_DisbursementsAndClaimsMasters_BusinessAreaId

-- DROP INDEX IF EXISTS public."IX_DisbursementsAndClaimsMasters_BusinessAreaId";

CREATE INDEX IF NOT EXISTS "IX_DisbursementsAndClaimsMasters_BusinessAreaId"
    ON public."DisbursementsAndClaimsMasters" USING btree
    ("BusinessAreaId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_DisbursementsAndClaimsMasters_CostCenterId

-- DROP INDEX IF EXISTS public."IX_DisbursementsAndClaimsMasters_CostCenterId";

CREATE INDEX IF NOT EXISTS "IX_DisbursementsAndClaimsMasters_CostCenterId"
    ON public."DisbursementsAndClaimsMasters" USING btree
    ("CostCenterId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_DisbursementsAndClaimsMasters_CurrencyTypeId

-- DROP INDEX IF EXISTS public."IX_DisbursementsAndClaimsMasters_CurrencyTypeId";

CREATE INDEX IF NOT EXISTS "IX_DisbursementsAndClaimsMasters_CurrencyTypeId"
    ON public."DisbursementsAndClaimsMasters" USING btree
    ("CurrencyTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_DisbursementsAndClaimsMasters_DepartmentId

-- DROP INDEX IF EXISTS public."IX_DisbursementsAndClaimsMasters_DepartmentId";

CREATE INDEX IF NOT EXISTS "IX_DisbursementsAndClaimsMasters_DepartmentId"
    ON public."DisbursementsAndClaimsMasters" USING btree
    ("DepartmentId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_DisbursementsAndClaimsMasters_EmployeeId

-- DROP INDEX IF EXISTS public."IX_DisbursementsAndClaimsMasters_EmployeeId";

CREATE INDEX IF NOT EXISTS "IX_DisbursementsAndClaimsMasters_EmployeeId"
    ON public."DisbursementsAndClaimsMasters" USING btree
    ("EmployeeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_DisbursementsAndClaimsMasters_ExpenseReimburseReqId

-- DROP INDEX IF EXISTS public."IX_DisbursementsAndClaimsMasters_ExpenseReimburseReqId";

CREATE INDEX IF NOT EXISTS "IX_DisbursementsAndClaimsMasters_ExpenseReimburseReqId"
    ON public."DisbursementsAndClaimsMasters" USING btree
    ("ExpenseReimburseReqId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_DisbursementsAndClaimsMasters_PettyCashRequestId

-- DROP INDEX IF EXISTS public."IX_DisbursementsAndClaimsMasters_PettyCashRequestId";

CREATE INDEX IF NOT EXISTS "IX_DisbursementsAndClaimsMasters_PettyCashRequestId"
    ON public."DisbursementsAndClaimsMasters" USING btree
    ("PettyCashRequestId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_DisbursementsAndClaimsMasters_ProjectId

-- DROP INDEX IF EXISTS public."IX_DisbursementsAndClaimsMasters_ProjectId";

CREATE INDEX IF NOT EXISTS "IX_DisbursementsAndClaimsMasters_ProjectId"
    ON public."DisbursementsAndClaimsMasters" USING btree
    ("ProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_DisbursementsAndClaimsMasters_RequestTypeId

-- DROP INDEX IF EXISTS public."IX_DisbursementsAndClaimsMasters_RequestTypeId";

CREATE INDEX IF NOT EXISTS "IX_DisbursementsAndClaimsMasters_RequestTypeId"
    ON public."DisbursementsAndClaimsMasters" USING btree
    ("RequestTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_DisbursementsAndClaimsMasters_SubProjectId

-- DROP INDEX IF EXISTS public."IX_DisbursementsAndClaimsMasters_SubProjectId";

CREATE INDEX IF NOT EXISTS "IX_DisbursementsAndClaimsMasters_SubProjectId"
    ON public."DisbursementsAndClaimsMasters" USING btree
    ("SubProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_DisbursementsAndClaimsMasters_WorkTaskId

-- DROP INDEX IF EXISTS public."IX_DisbursementsAndClaimsMasters_WorkTaskId";

CREATE INDEX IF NOT EXISTS "IX_DisbursementsAndClaimsMasters_WorkTaskId"
    ON public."DisbursementsAndClaimsMasters" USING btree
    ("WorkTaskId" ASC NULLS LAST)
    TABLESPACE pg_default;


-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------

-- Table: public.TravelApprovalRequests

-- DROP TABLE IF EXISTS public."TravelApprovalRequests";

CREATE TABLE IF NOT EXISTS public."TravelApprovalRequests"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "EmployeeId" integer NOT NULL,
    "TravelStartDate" timestamp without time zone NOT NULL,
    "TravelEndDate" timestamp without time zone NOT NULL,
    "TravelPurpose" character varying(150) COLLATE pg_catalog."default" NOT NULL,
    "ReqRaisedDate" timestamp without time zone NOT NULL,
    "DepartmentId" integer,
    "ProjectId" integer,
    "SubProjectId" integer,
    "WorkTaskId" integer,
    "CostCenterId" integer NOT NULL,
    "ApprovalStatusTypeId" integer NOT NULL,
    "ApprovedDate" timestamp without time zone,
    "Comments" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_TravelApprovalRequests" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_TravelApprovalRequests_ApprovalStatusTypes_ApprovalStatusTy~" FOREIGN KEY ("ApprovalStatusTypeId")
        REFERENCES public."ApprovalStatusTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_TravelApprovalRequests_CostCenters_CostCenterId" FOREIGN KEY ("CostCenterId")
        REFERENCES public."CostCenters" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_TravelApprovalRequests_Departments_DepartmentId" FOREIGN KEY ("DepartmentId")
        REFERENCES public."Departments" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_TravelApprovalRequests_Employees_EmployeeId" FOREIGN KEY ("EmployeeId")
        REFERENCES public."Employees" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_TravelApprovalRequests_Projects_ProjectId" FOREIGN KEY ("ProjectId")
        REFERENCES public."Projects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_TravelApprovalRequests_SubProjects_SubProjectId" FOREIGN KEY ("SubProjectId")
        REFERENCES public."SubProjects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_TravelApprovalRequests_WorkTasks_WorkTaskId" FOREIGN KEY ("WorkTaskId")
        REFERENCES public."WorkTasks" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."TravelApprovalRequests"
    OWNER to postgres;
-- Index: IX_TravelApprovalRequests_ApprovalStatusTypeId

-- DROP INDEX IF EXISTS public."IX_TravelApprovalRequests_ApprovalStatusTypeId";

CREATE INDEX IF NOT EXISTS "IX_TravelApprovalRequests_ApprovalStatusTypeId"
    ON public."TravelApprovalRequests" USING btree
    ("ApprovalStatusTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_TravelApprovalRequests_CostCenterId

-- DROP INDEX IF EXISTS public."IX_TravelApprovalRequests_CostCenterId";

CREATE INDEX IF NOT EXISTS "IX_TravelApprovalRequests_CostCenterId"
    ON public."TravelApprovalRequests" USING btree
    ("CostCenterId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_TravelApprovalRequests_DepartmentId

-- DROP INDEX IF EXISTS public."IX_TravelApprovalRequests_DepartmentId";

CREATE INDEX IF NOT EXISTS "IX_TravelApprovalRequests_DepartmentId"
    ON public."TravelApprovalRequests" USING btree
    ("DepartmentId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_TravelApprovalRequests_EmployeeId

-- DROP INDEX IF EXISTS public."IX_TravelApprovalRequests_EmployeeId";

CREATE INDEX IF NOT EXISTS "IX_TravelApprovalRequests_EmployeeId"
    ON public."TravelApprovalRequests" USING btree
    ("EmployeeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_TravelApprovalRequests_ProjectId

-- DROP INDEX IF EXISTS public."IX_TravelApprovalRequests_ProjectId";

CREATE INDEX IF NOT EXISTS "IX_TravelApprovalRequests_ProjectId"
    ON public."TravelApprovalRequests" USING btree
    ("ProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_TravelApprovalRequests_SubProjectId

-- DROP INDEX IF EXISTS public."IX_TravelApprovalRequests_SubProjectId";

CREATE INDEX IF NOT EXISTS "IX_TravelApprovalRequests_SubProjectId"
    ON public."TravelApprovalRequests" USING btree
    ("SubProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_TravelApprovalRequests_WorkTaskId

-- DROP INDEX IF EXISTS public."IX_TravelApprovalRequests_WorkTaskId";

CREATE INDEX IF NOT EXISTS "IX_TravelApprovalRequests_WorkTaskId"
    ON public."TravelApprovalRequests" USING btree
    ("WorkTaskId" ASC NULLS LAST)
    TABLESPACE pg_default;
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-- Table: public.TravelApprovalStatusTrackers

-- DROP TABLE IF EXISTS public."TravelApprovalStatusTrackers";

CREATE TABLE IF NOT EXISTS public."TravelApprovalStatusTrackers"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "EmployeeId" integer NOT NULL,
    "TravelApprovalRequestId" integer NOT NULL,
    "TravelStartDate" timestamp without time zone NOT NULL,
    "TravelEndDate" timestamp without time zone NOT NULL,
    "DepartmentId" integer,
    "ProjManagerId" integer,
    "ProjectId" integer,
    "SubProjectId" integer,
    "WorkTaskId" integer,
    "ApprovalGroupId" integer NOT NULL,
    "RoleId" integer NOT NULL,
    "ApprovalLevelId" integer NOT NULL,
    "ReqDate" timestamp without time zone NOT NULL,
    "FinalApprovedDate" timestamp without time zone,
    "ApprovalStatusTypeId" integer NOT NULL,
    "Comments" character varying(250) COLLATE pg_catalog."default",
    CONSTRAINT "PK_TravelApprovalStatusTrackers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_TravelApprovalStatusTrackers_ApprovalLevels_ApprovalLevelId" FOREIGN KEY ("ApprovalLevelId")
        REFERENCES public."ApprovalLevels" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_TravelApprovalStatusTrackers_ApprovalStatusTypes_ApprovalSt~" FOREIGN KEY ("ApprovalStatusTypeId")
        REFERENCES public."ApprovalStatusTypes" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_TravelApprovalStatusTrackers_Departments_DepartmentId" FOREIGN KEY ("DepartmentId")
        REFERENCES public."Departments" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_TravelApprovalStatusTrackers_Employees_EmployeeId" FOREIGN KEY ("EmployeeId")
        REFERENCES public."Employees" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_TravelApprovalStatusTrackers_Employees_ProjManagerId" FOREIGN KEY ("ProjManagerId")
        REFERENCES public."Employees" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_TravelApprovalStatusTrackers_JobRoles_RoleId" FOREIGN KEY ("RoleId")
        REFERENCES public."JobRoles" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_TravelApprovalStatusTrackers_Projects_ProjectId" FOREIGN KEY ("ProjectId")
        REFERENCES public."Projects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_TravelApprovalStatusTrackers_SubProjects_SubProjectId" FOREIGN KEY ("SubProjectId")
        REFERENCES public."SubProjects" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_TravelApprovalStatusTrackers_TravelApprovalRequests_TravelA~" FOREIGN KEY ("TravelApprovalRequestId")
        REFERENCES public."TravelApprovalRequests" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_TravelApprovalStatusTrackers_WorkTasks_WorkTaskId" FOREIGN KEY ("WorkTaskId")
        REFERENCES public."WorkTasks" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."TravelApprovalStatusTrackers"
    OWNER to postgres;
-- Index: IX_TravelApprovalStatusTrackers_ApprovalLevelId

-- DROP INDEX IF EXISTS public."IX_TravelApprovalStatusTrackers_ApprovalLevelId";

CREATE INDEX IF NOT EXISTS "IX_TravelApprovalStatusTrackers_ApprovalLevelId"
    ON public."TravelApprovalStatusTrackers" USING btree
    ("ApprovalLevelId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_TravelApprovalStatusTrackers_ApprovalStatusTypeId

-- DROP INDEX IF EXISTS public."IX_TravelApprovalStatusTrackers_ApprovalStatusTypeId";

CREATE INDEX IF NOT EXISTS "IX_TravelApprovalStatusTrackers_ApprovalStatusTypeId"
    ON public."TravelApprovalStatusTrackers" USING btree
    ("ApprovalStatusTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_TravelApprovalStatusTrackers_DepartmentId

-- DROP INDEX IF EXISTS public."IX_TravelApprovalStatusTrackers_DepartmentId";

CREATE INDEX IF NOT EXISTS "IX_TravelApprovalStatusTrackers_DepartmentId"
    ON public."TravelApprovalStatusTrackers" USING btree
    ("DepartmentId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_TravelApprovalStatusTrackers_EmployeeId

-- DROP INDEX IF EXISTS public."IX_TravelApprovalStatusTrackers_EmployeeId";

CREATE INDEX IF NOT EXISTS "IX_TravelApprovalStatusTrackers_EmployeeId"
    ON public."TravelApprovalStatusTrackers" USING btree
    ("EmployeeId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_TravelApprovalStatusTrackers_ProjManagerId

-- DROP INDEX IF EXISTS public."IX_TravelApprovalStatusTrackers_ProjManagerId";

CREATE INDEX IF NOT EXISTS "IX_TravelApprovalStatusTrackers_ProjManagerId"
    ON public."TravelApprovalStatusTrackers" USING btree
    ("ProjManagerId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_TravelApprovalStatusTrackers_ProjectId

-- DROP INDEX IF EXISTS public."IX_TravelApprovalStatusTrackers_ProjectId";

CREATE INDEX IF NOT EXISTS "IX_TravelApprovalStatusTrackers_ProjectId"
    ON public."TravelApprovalStatusTrackers" USING btree
    ("ProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_TravelApprovalStatusTrackers_RoleId

-- DROP INDEX IF EXISTS public."IX_TravelApprovalStatusTrackers_RoleId";

CREATE INDEX IF NOT EXISTS "IX_TravelApprovalStatusTrackers_RoleId"
    ON public."TravelApprovalStatusTrackers" USING btree
    ("RoleId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_TravelApprovalStatusTrackers_SubProjectId

-- DROP INDEX IF EXISTS public."IX_TravelApprovalStatusTrackers_SubProjectId";

CREATE INDEX IF NOT EXISTS "IX_TravelApprovalStatusTrackers_SubProjectId"
    ON public."TravelApprovalStatusTrackers" USING btree
    ("SubProjectId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_TravelApprovalStatusTrackers_TravelApprovalRequestId

-- DROP INDEX IF EXISTS public."IX_TravelApprovalStatusTrackers_TravelApprovalRequestId";

CREATE INDEX IF NOT EXISTS "IX_TravelApprovalStatusTrackers_TravelApprovalRequestId"
    ON public."TravelApprovalStatusTrackers" USING btree
    ("TravelApprovalRequestId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_TravelApprovalStatusTrackers_WorkTaskId

-- DROP INDEX IF EXISTS public."IX_TravelApprovalStatusTrackers_WorkTaskId";

CREATE INDEX IF NOT EXISTS "IX_TravelApprovalStatusTrackers_WorkTaskId"
    ON public."TravelApprovalStatusTrackers" USING btree
    ("WorkTaskId" ASC NULLS LAST)
    TABLESPACE pg_default;
	
	
	
	
	
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
-----------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>------------------------------
	
	
	
SELECT pg_catalog.setval('public."ApprovalGroups_Id_seq"', 1, true);
SELECT pg_catalog.setval('public."ApprovalLevels_Id_seq"', 5, false);
SELECT pg_catalog.setval('public."ApprovalRoleMaps_Id_seq"', 1, true);
SELECT pg_catalog.setval('public."ApprovalStatusTypes_Id_seq"', 6, true);
SELECT pg_catalog.setval('public."AspNetRoleClaims_Id_seq"', 1, false);
SELECT pg_catalog.setval('public."AspNetUserClaims_Id_seq"', 1, false);
SELECT pg_catalog.setval('public."BusinessAreas_Id_seq"', 1, true);
SELECT pg_catalog.setval('public."ClaimApprovalStatusTrackers_Id_seq"', 5000, false);
SELECT pg_catalog.setval('public."CostCenters_Id_seq"', 1, true);
SELECT pg_catalog.setval('public."CurrencyTypes_Id_seq"', 2, false);
SELECT pg_catalog.setval('public."Departments_Id_seq"', 1, true);
SELECT pg_catalog.setval('public."DisbursementsAndClaimsMasters_Id_seq"', 1000, true);
SELECT pg_catalog.setval('public."ExpenseReimburseRequests_Id_seq"', 1000, true);
SELECT pg_catalog.setval('public."ExpenseReimburseStatusTrackers_Id_seq"', 10000, true);
SELECT pg_catalog.setval('public."ExpenseSubClaims_Id_seq"', 1000, true);
SELECT pg_catalog.setval('public."EmpCurrentPettyCashBalances_Id_seq"', 1, true);
SELECT pg_catalog.setval('public."Employees_Id_seq"', 1, true);
SELECT pg_catalog.setval('public."EmploymentTypes_Id_seq"', 3, false);
SELECT pg_catalog.setval('public."ExpenseCategories_Id_seq"', 1, true);
SELECT pg_catalog.setval('public."ExpenseTypes_Id_seq"', 5, true);
SELECT pg_catalog.setval('public."FileDocuments_Id_seq"', 1, true);
SELECT pg_catalog.setval('public."GeneralLedger_Id_seq"', 1, true);
SELECT pg_catalog.setval('public."JobRoles_Id_seq"', 9, true);
SELECT pg_catalog.setval('public."PettyCashRequests_Id_seq"', 1000, false);
SELECT pg_catalog.setval('public."ProjectManagements_Id_seq"', 1, false);
SELECT pg_catalog.setval('public."Projects_Id_seq"', 1, false);
SELECT pg_catalog.setval('public."RequestTypes_Id_seq"', 4, false);
SELECT pg_catalog.setval('public."StatusTypes_Id_seq"', 3, false);
SELECT pg_catalog.setval('public."SubProjects_Id_seq"', 1, false);
SELECT pg_catalog.setval('public."TravelApprovalRequests_Id_seq"', 1000, true);
SELECT pg_catalog.setval('public."TravelApprovalStatusTrackers_Id_seq"', 5000, true);
SELECT pg_catalog.setval('public."WorkTasks_Id_seq"', 1, false);
